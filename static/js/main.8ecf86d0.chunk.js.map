{"version":3,"sources":["components/SearchBar/CityDropDown.tsx","api/zomatoApi.ts","redux/restaurantSlice.ts","components/SearchBar/RestaurantDropDownView.tsx","components/SearchBar/RestaurantDropDownHeader.tsx","components/SearchBar/RestaurantDropDown.tsx","hooks/useClickOutside.ts","redux/homeSlice.ts","components/SearchBar/index.tsx","views/HomeView/CategoriesView.tsx","views/HomeView/index.tsx","views/RestaurantView/RestaurantDetails.tsx","assets/cuisine-1.jpg","assets/cuisine-2.jpg","assets/cuisine-3.jpg","assets/cuisine-4.jpg","assets/cuisine-5.jpg","views/RestaurantView/RestaurantImageGrid.tsx","views/RestaurantView/index.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["CityDropDown","props","className","onClick","navigator","geolocation","getCurrentPosition","pos","console","log","coords","err","message","color","size","citiesList","map","city","selectedCity","name","id","zomato","axios","create","baseURL","headers","fetchRestaurantsAsyncThunk","createAsyncThunk","a","q","entity_id","get","params","count","entity_type","response","restaurants","data","restaurant","push","length","Promise","reject","Error","fetchRestaurantAsyncThunk","res_id","searchRestaurantsSlice","createSlice","initialState","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","selectedRestaurantSlice","select","selectedRestaurantActionCreator","actions","restaurantReducer","combineReducers","restaurantState","reducer","selectedRestaurant","RestaurantDropDownView","dispatch","useDispatch","to","slicedUrl","url","slice","lastIndexOf","R","handleSelectedRestaurantLink","thumb","src","alt","cuisines","user_rating","aggregate_rating","votes","locality","streetCounty","split","shift","join","splitLocalityName","location","RestaurantDropDownHeader","restaurantToMatchAgainst","restFirstName","every","rest","startsWith","renderHeaderType","RestaurantDropDown","restaurantsState","useSelector","renderTopTenRestaurants","useClickOutside","elRef","callback","useEffect","listener","e","current","contains","target","document","addEventListener","removeEventListener","cities","country_id","country_name","country_flag_url","should_experiment_with","has_go_out_tab","discovery_enabled","has_new_ad_format","is_state","state_id","state_name","state_code","prepareStringForComparison","filteredCityList","toLowerCase","filter","str","includes","fetchCitiesAsyncThunk","exactQueryMatchList","locations","location_suggestions","listOfQueries","loc","n","searchCitiesSlice","selectedCitySlice","selectedCityActionCreator","homeReducer","citiesState","cityLoader","css","bouncerLoader","SearchBar","selected","isLoadingCities","isLoadingRestaurants","useState","cityQuery","setCityQuery","searchQuery","setSearchQuery","isCityDropDrown","setIsCityDropDrown","isRestDropDrown","setIsRestDropDrown","useRef","onClickOutside","useCallback","updatedSelected","find","ref","stopPropagation","onSubmit","preventDefault","type","placeholder","value","onChange","checked","CSSTransition","in","classNames","timeout","unmountOnExit","CategoriesView","Home","window","scrollTo","handleUISelectedCityChange","RestaurantDetails","details","timings","starsRating","Math","floor","Array","fill","renderFullStarRating","renderHalfStarRating","all_reviews_count","ImageGrid","getRandomCuisineImage","random","image2","image3","image4","image5","image1","Restaurant","useParams","resId","splice","searchBarQuery","RestaurantImageGrid","App","path","exact","component","configureStore","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.8ecf86d0.chunk.js","sourcesContent":["import React from 'react';\nimport { MdMyLocation } from 'react-icons/md';\nimport { City } from '../../redux/type';\nimport '../../DropDown.css';\n\ninterface CityDropDownProps {\n  citiesList: City[];\n  selectedCity: Function;\n}\n\nconst CityDropDown: React.SFC<CityDropDownProps> = (\n  props: CityDropDownProps\n) => {\n  const getCurrentLoction = () => {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        console.log(pos.coords);\n      },\n      (err) => {\n        console.log(err.message);\n      }\n    );\n  };\n  return (\n    <div className='cities--drop-down absolute flex flex-col bg-white rounded-md h-64 w-full md:w-3/5 overflow-scroll'>\n      <div\n        onClick={getCurrentLoction}\n        className='cursor-pointer hover:bg-gray-100 border-b p-4 mb-4 flex items-center'\n      >\n        <MdMyLocation color='#e8596a' size='1.2rem' />\n        <h4 className='ml-2 text-red-600'>Detect current location</h4>\n      </div>\n      <h3 className='cursor-pointer p-4 text-gray-500'>Popular Locations</h3>\n      <ul>\n        {props.citiesList.map((city) => (\n          <li\n            key={city.id}\n            onClick={() => {\n              props.selectedCity(city);\n            }}\n            className='cursor-pointer hover:bg-gray-100 border-b p-4'\n          >\n            {city.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CityDropDown;\n","import axios from 'axios';\n\nconst zomato = axios.create({\n  baseURL: 'https://developers.zomato.com/api/v2.1/',\n  headers: {\n    //JUST A DEMO... gh-pages has no other option\n    'user-key': '33a7282f1c4dcc7e978325683859caa8',\n  },\n});\n\nexport default zomato;\n","import {\n  combineReducers,\n  createSlice,\n  createAsyncThunk,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport zomato from '../api/zomatoApi';\nimport { Restaurant } from '../redux/type';\n\nexport const fetchRestaurantsAsyncThunk = createAsyncThunk<\n  Restaurant[],\n  { q: string; entity_id: number }\n>(\n  'restaurantState/fetchRestaurants',\n  async ({ q, entity_id }: { q: string; entity_id: number }) => {\n    const response = await zomato.get('/search', {\n      params: { q, entity_id, count: 20, entity_type: 'city' },\n    });\n\n    try {\n      const restaurants: Restaurant[] = [];\n      response.data.restaurants.map(({ restaurant }: any) => {\n        restaurants.push(restaurant);\n      });\n\n      if (!restaurants.length)\n        return Promise.reject(new Error('No results found'));\n      return restaurants;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n);\n\nexport const fetchRestaurantAsyncThunk = createAsyncThunk<\n  Restaurant,\n  { q: string; res_id: number }\n>(\n  'selectedRestaurant,fetchRestaurant',\n  async ({ q, res_id }: { q: string; res_id: number }) => {\n    const response = await zomato.get('/restaurant', {\n      params: { q, res_id },\n    });\n    try {\n      const restaurant = response.data;\n      if (!restaurant) return Promise.reject(new Error('No results found'));\n      return restaurant;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n);\n\nconst searchRestaurantsSlice = createSlice({\n  name: 'restaurauntState',\n  initialState: {\n    restaurants: null as null | Restaurant[],\n    loading: false,\n    error: false,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchRestaurantsAsyncThunk.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(\n      fetchRestaurantsAsyncThunk.fulfilled,\n      (state, { payload }: PayloadAction<Restaurant[]>) => {\n        return (state = {\n          restaurants: payload,\n          loading: false,\n          error: false,\n        });\n      }\n    );\n    builder.addCase(fetchRestaurantsAsyncThunk.rejected, (state) => {\n      return (state = { restaurants: null, loading: false, error: true });\n    });\n  },\n});\n\nconst selectedRestaurantSlice = createSlice({\n  name: 'selectedRestaurant',\n  initialState: null as null | Restaurant,\n  reducers: {\n    select: (state, { payload }: PayloadAction<null | Restaurant>) =>\n      (state = payload),\n  },\n  extraReducers: (builder) => {\n    builder.addCase(\n      fetchRestaurantAsyncThunk.fulfilled,\n      (state, { payload }: PayloadAction<Restaurant>) => {\n        return (state = payload);\n      }\n    );\n    builder.addCase(fetchRestaurantAsyncThunk.rejected, (state) => {\n      return (state = null);\n    });\n  },\n});\n\nexport const {\n  select: selectedRestaurantActionCreator,\n} = selectedRestaurantSlice.actions;\n\nexport const restaurantReducer = combineReducers({\n  restaurantState: searchRestaurantsSlice.reducer,\n  selectedRestaurant: selectedRestaurantSlice.reducer,\n});\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { TiStar } from 'react-icons/ti';\nimport { MdImage } from 'react-icons/md';\nimport { Link } from 'react-router-dom';\n\nimport { selectedRestaurantActionCreator } from '../../redux/restaurantSlice';\nimport { Restaurant } from '../../redux/type';\n\ninterface RestaurantDropDownViewProps {\n  restaurant: Restaurant;\n}\n\nconst RestaurantDropDownView: React.SFC<RestaurantDropDownViewProps> = ({\n  restaurant,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSelectedRestaurant = () => {\n    dispatch(selectedRestaurantActionCreator(restaurant));\n  };\n\n  const splitLocalityName = (locality: string): string => {\n    const streetCounty = locality.split(',');\n    if (streetCounty.length === 2) {\n      streetCounty.shift();\n      const county = streetCounty.join('');\n      return county;\n    }\n    return locality;\n  };\n\n  const handleSelectedRestaurantLink = (): string => {\n    const slicedUrl = restaurant.url.slice(23, restaurant.url.lastIndexOf('?'));\n    return `/${slicedUrl}-${restaurant.R.res_id}`;\n  };\n  return (\n    <Link\n      onClick={handleSelectedRestaurant}\n      to={handleSelectedRestaurantLink()}\n      className='flex justify-start p-4 hover:bg-gray-100 cursor-pointer'\n    >\n      <div className='h-16 w-16 flex items-center justify-center mr-4 rounded-md overflow-hidden'>\n        {restaurant.thumb ? (\n          <img\n            className='bg-cover bg-no-repeat text-sm'\n            src={restaurant.thumb}\n            alt={restaurant.cuisines}\n          />\n        ) : (\n          <MdImage color='#899db7' size='100%' />\n        )}\n      </div>\n      <div className='flex flex-col justify-evenly'>\n        <h1>{restaurant.name}</h1>\n        {restaurant.user_rating.aggregate_rating === 0 ? null : (\n          <div className='flex items-center h-3 w-3 my-2 bg-black rounded-sm'>\n            <div>\n              <TiStar size='.75rem' color='#fff' />\n            </div>\n            <h1 className='mx-2'>{restaurant.user_rating.aggregate_rating}</h1>\n            <h1 className='text-sm text-gray-600 font-hairline'>\n              &#40;{restaurant.user_rating.votes}&#41;\n            </h1>\n          </div>\n        )}\n        <div className='flex text-sm font-hairline text-gray-600'>\n          <p>{splitLocalityName(restaurant.location.locality)}</p>\n          <p>, {restaurant.location.city}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default RestaurantDropDownView;\n","import React from 'react';\nimport { MdImage } from 'react-icons/md';\nimport { Restaurant } from '../../redux/type';\n\ninterface RestDropDownHeaderProps {\n  restaurants: Restaurant[];\n}\n\nconst RestaurantDropDownHeader: React.SFC<RestDropDownHeaderProps> = (\n  props\n) => {\n  const renderHeaderType = () => {\n    const restaurantToMatchAgainst = props.restaurants[0];\n\n    //should only return relevant results to the query,\n    //so match only the first part of the restrnt name,\n    //and remove any trailing names eg: Starbucks-Marriott Hotel...\n    let restFirstName = restaurantToMatchAgainst.name.split('-' && ' ');\n\n    const checkAllMatch = props.restaurants.every((rest) => {\n      return rest.name.startsWith(restFirstName[0]);\n    });\n\n    if (checkAllMatch) {\n      return (\n        <>\n          <div className='flex items-center justify-between ml-4 mr-2 pt-6 pb-2'>\n            <h1 className='text-sm text-gray-600'>Top Restaurants</h1>\n            <h3 className='view-all text-sm text-red-500 cursor-pointer'>\n              View all outlets{' '}\n              <span className='view-arrow inline-block text-xl'>&rarr;</span>\n            </h3>\n          </div>\n          <h2 className='ml-4'>\n            View all {restaurantToMatchAgainst.name} outlets\n          </h2>\n        </>\n      );\n    }\n    return (\n      <div className='flex items-center ml-4 pt-6 pb-2 hover:bg-gray-100'>\n        {restaurantToMatchAgainst.thumb ? (\n          <img\n            className='rounded-md h-16 w-16 bg-cover bg-no-repeat break-words'\n            src={restaurantToMatchAgainst.thumb}\n            alt='cuisine'\n          />\n        ) : (\n          <MdImage size='4rem' color='#899db7' />\n        )}\n        <div className='flex flex-col ml-4'>\n          <h1>{restaurantToMatchAgainst.cuisines}</h1>\n          <h1 className='text-sm font-hairline text-gray-600'>Cuisine</h1>\n        </div>\n      </div>\n    );\n  };\n\n  return <>{renderHeaderType()}</>;\n};\n\nexport default RestaurantDropDownHeader;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from '../../redux/type';\nimport RestaurantDropDownView from './RestaurantDropDownView';\nimport RestaurantDropDownHeader from './RestaurantDropDownHeader';\nimport '../../DropDown.css';\n\nconst RestaurantDropDown: React.SFC = () => {\n  const restaurantsState = useSelector(\n    (state: State) => state.restaurantReducer.restaurantState\n  );\n\n  const renderTopTenRestaurants = () => {\n    const restaurants = restaurantsState.restaurants;\n\n    if (restaurants.length > 10) {\n      const topTen = restaurants.slice(0, 10);\n      return topTen;\n    }\n    return restaurants;\n  };\n\n  return (\n    <div className='absolute top-0 right-0 z-20 flex flex-col bg-white rounded-md h-64 w-full md:w-9/12 lg:w-7/12 overflow-scroll'>\n      {restaurantsState.error || restaurantsState.restaurants === null ? (\n        <p className='ml-4 mt-8'>No results found =&#40;</p>\n      ) : (\n        restaurantsState.restaurants && (\n          <div>\n            <RestaurantDropDownHeader restaurants={renderTopTenRestaurants()} />\n\n            <ul>\n              {renderTopTenRestaurants().map((restaurant) => {\n                return (\n                  <li key={restaurant.id}>\n                    <RestaurantDropDownView restaurant={restaurant} />\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantDropDown;\n","import React, { useEffect } from 'react';\n\nfunction useClickOutside(elRef: React.RefObject<any>, callback: Function) {\n  useEffect(() => {\n    const listener = (e: any) => {\n      if (!elRef.current || elRef.current.contains(e.target)) {\n        return;\n      }\n      callback(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [callback, elRef]);\n}\n\nexport default useClickOutside;\n","import {\n  combineReducers,\n  createSlice,\n  createAsyncThunk,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n\nimport zomato from '../api/zomatoApi';\nimport { City } from './type';\n\n//inital state for cities\nconst cities: City[] = [\n  {\n    id: 278,\n    name: 'Austin, TX',\n    country_id: 216,\n    country_name: 'United States',\n    country_flag_url:\n      'https://b.zmtcdn.com/images/countries/flags/country_216.png',\n    should_experiment_with: 0,\n    has_go_out_tab: 0,\n    discovery_enabled: 1,\n    has_new_ad_format: 0,\n    is_state: 0,\n    state_id: 111,\n    state_name: 'Texas',\n    state_code: 'TX',\n  },\n];\n\n//filter non alphabet or numeric characters and whitespace\nconst prepareStringForComparison = (city: string): string[] => {\n  const filteredCityList = [];\n\n  city = city\n    .toLowerCase()\n    .split('')\n    .filter((str) => !str.includes(' ') && !str.includes(','))\n    .join('');\n\n  filteredCityList.push(city);\n  return filteredCityList;\n};\n\nexport const fetchCitiesAsyncThunk = createAsyncThunk<City[], { q: string }>(\n  'cities/fetchCity',\n  async ({ q }: { q: string }) => {\n    try {\n      const exactQueryMatchList: City[] = [];\n\n      const response = await zomato.get('/cities', { params: { q } });\n      const locations = response.data.location_suggestions;\n\n      const listOfQueries = prepareStringForComparison(q);\n\n      // Compare list of locations from response to the single query\n      // to look for exact match\n      locations.map((loc: City) => {\n        const namesList = prepareStringForComparison(loc.name);\n        namesList.map((n) => {\n          if (n === listOfQueries[0]) exactQueryMatchList.push(loc);\n        });\n      });\n\n      if (exactQueryMatchList.length) return exactQueryMatchList;\n      else {\n        return locations.length\n          ? locations\n          : Promise.reject(new Error('No results found'));\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n);\n\nconst searchCitiesSlice = createSlice({\n  name: 'citiesState',\n  initialState: { cities, loading: false, error: false },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCitiesAsyncThunk.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(\n      fetchCitiesAsyncThunk.fulfilled,\n      (state, { payload }: PayloadAction<City[]>) => {\n        const cities: City[] = [];\n\n        payload.map((loc: City) => {\n          cities.push(loc);\n        });\n        return (state = { cities, loading: false, error: false });\n      }\n    );\n    builder.addCase(fetchCitiesAsyncThunk.rejected, (state) => {\n      return (state = { cities, loading: false, error: true });\n    });\n  },\n});\n\nconst selectedCitySlice = createSlice({\n  name: 'selectedCity',\n  initialState: null as City | null,\n  reducers: {\n    select: (state, { payload }: PayloadAction<City | null>) =>\n      (state = payload),\n  },\n});\n\nexport const { select: selectedCityActionCreator } = selectedCitySlice.actions;\n\nexport const homeReducer = combineReducers({\n  citiesState: searchCitiesSlice.reducer,\n  selectedCity: selectedCitySlice.reducer,\n});\n","import React, {\n  useRef,\n  useState,\n  useEffect,\n  useCallback,\n  ChangeEvent,\n} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TiLocation, TiArrowSortedDown } from 'react-icons/ti';\nimport { RiSearchLine } from 'react-icons/ri';\nimport { BounceLoader } from 'react-spinners';\nimport { css } from '@emotion/core';\nimport { CSSTransition } from 'react-transition-group';\n\nimport CityDropDown from './CityDropDown';\nimport RestaurantDropDown from './RestaurantDropDown';\nimport useClickOutside from '../../hooks/useClickOutside';\nimport { State, City } from '../../redux/type';\nimport { fetchRestaurantsAsyncThunk } from '../../redux/restaurantSlice';\nimport {\n  selectedCityActionCreator,\n  fetchCitiesAsyncThunk,\n} from '../../redux/homeSlice';\nimport '../../SearchBar.css';\n\nconst cityLoader = css`\n  margin: 0 0.4rem;\n  margin-right: 1rem;\n`;\n\nconst bouncerLoader = css`\n  margin: 0 0.1rem;\n`;\n\nconst SearchBar: React.FC = () => {\n  const dispatch = useDispatch();\n  const cities = useSelector(\n    (state: State) => state.homeReducer.citiesState.cities\n  );\n  const restaurants = useSelector(\n    (state: State) => state.restaurantReducer.restaurantState.restaurants\n  );\n  const selected = useSelector(\n    (state: State) => state.homeReducer.selectedCity\n  );\n  const isLoadingCities = useSelector(\n    (state: State) => state.homeReducer.citiesState.loading\n  );\n  const isLoadingRestaurants = useSelector(\n    (state: State) => state.restaurantReducer.restaurantState.loading\n  );\n  const [cityQuery, setCityQuery] = useState<string>('');\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isCityDropDrown, setIsCityDropDrown] = useState<boolean>(false);\n  const [isRestDropDrown, setIsRestDropDrown] = useState<boolean>(false);\n  const elRef = useRef<HTMLFormElement>(null);\n\n  useEffect(() => {\n    if (cities.length > 1) setIsCityDropDrown(true);\n  }, [cities]);\n\n  useEffect(() => {\n    if (!isLoadingRestaurants && restaurants) setIsRestDropDrown(true);\n    else if (!isLoadingRestaurants && restaurants === null)\n      setIsRestDropDrown(true);\n  }, [isLoadingRestaurants, restaurants]);\n\n  useEffect(() => {\n    if (isCityDropDrown) setIsRestDropDrown(false);\n  }, [isCityDropDrown]);\n\n  useEffect(() => {\n    if (isRestDropDrown) setIsCityDropDrown(false);\n  }, [isRestDropDrown]);\n\n  useEffect(() => {\n    setIsCityDropDrown(false);\n    setIsRestDropDrown(false);\n  }, []);\n\n  const onClickOutside = useCallback(() => {\n    if (isCityDropDrown) setIsCityDropDrown(false);\n    if (isRestDropDrown) setIsRestDropDrown(false);\n  }, [isCityDropDrown, isRestDropDrown]);\n\n  useClickOutside(elRef, onClickOutside);\n\n  const handleCityDropDownOnChange = () => {\n    setIsCityDropDrown(!isCityDropDrown);\n    setIsRestDropDrown(false);\n  };\n\n  const handleRestDropDownOnChange = () => {\n    setIsRestDropDrown(!isRestDropDrown);\n    setIsCityDropDrown(false);\n  };\n\n  const updatedSelected = cities.find((city) => city === selected);\n\n  const handleUISelectedCityChange = (): string => {\n    return updatedSelected ? updatedSelected.name : cities[0].name;\n  };\n\n  const handleSearchSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (cityQuery.length) {\n      dispatch(fetchCitiesAsyncThunk({ q: cityQuery }));\n      setCityQuery('');\n    } else {\n      dispatch(\n        fetchRestaurantsAsyncThunk({\n          q: searchQuery,\n          entity_id: updatedSelected ? updatedSelected.id : cities[0].id,\n        })\n      );\n      setSearchQuery('');\n    }\n  };\n\n  const handleCityQueryInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setCityQuery(e.target.value);\n    setIsCityDropDrown(false);\n    setIsRestDropDrown(false);\n  };\n\n  const handleNewSelectedCity = (city: City) => {\n    dispatch(selectedCityActionCreator(city));\n    setIsCityDropDrown(false);\n  };\n\n  const handleSearchQueryInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n    setIsRestDropDrown(false);\n    setIsCityDropDrown(false);\n  };\n\n  const handleDropDownOnSelectedRestaurant = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    setIsRestDropDrown(false);\n  };\n\n  return (\n    <form\n      ref={elRef}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n      onSubmit={handleSearchSubmit}\n      className='searchbar-shadow relative flex justify-evenly items-center h-12 w-11/12 md:w-7/12 xl:w-6/12 my-3 pl-1 bg-white rounded-md'\n    >\n      {isLoadingCities ? (\n        <BounceLoader\n          css={cityLoader}\n          size={15}\n          color={'#e8596a'}\n          loading={isLoadingCities}\n        />\n      ) : (\n        <TiLocation color='#e8596a' className='mr-1' size='3rem' />\n      )}\n      <input\n        className='h-full w-full md:w-2/4 placeholder-gray-600 mr-2 rounded-md'\n        type='text'\n        name='city'\n        placeholder={handleUISelectedCityChange()}\n        value={cityQuery}\n        onChange={handleCityQueryInput}\n      />\n\n      <input\n        type='checkbox'\n        className='checkbox-arrow z-20 opacity-0 cursor-pointer'\n        onChange={handleCityDropDownOnChange}\n        checked={isCityDropDrown}\n      />\n      <CSSTransition\n        in={isCityDropDrown}\n        classNames='cities--drop-down-'\n        timeout={200}\n        unmountOnExit={true}\n      >\n        <CityDropDown\n          citiesList={cities}\n          selectedCity={handleNewSelectedCity}\n        />\n      </CSSTransition>\n\n      <TiArrowSortedDown\n        className='arrow absolute'\n        color='#4f4f4f'\n        size='1.2rem'\n      />\n      <p className='text-gray-500 text-xl mx-1'>|</p>\n\n      <input\n        className='h-full w-full placeholder-gray-600 rounded-md'\n        type='text'\n        name='query'\n        placeholder='Search for restaurant, cuisine or a dish'\n        value={searchQuery}\n        onChange={handleSearchQueryInput}\n      />\n\n      <input\n        type='checkbox'\n        className='checkbox-restaurant hidden'\n        onChange={handleRestDropDownOnChange}\n        checked={isRestDropDrown}\n      />\n\n      <CSSTransition\n        in={isRestDropDrown}\n        classNames='restaurants--drop-down- restaurants--container-'\n        timeout={200}\n        unmountOnExit={true}\n      >\n        <div\n          onClick={handleDropDownOnSelectedRestaurant}\n          className='restaurants--container h-full w-full'\n        >\n          <RestaurantDropDown />\n        </div>\n      </CSSTransition>\n\n      <button\n        type='submit'\n        className='hover:bg-red-600 flex items-center focus:outline-none h-full bg-red-500 px-4 rounded-r-md'\n      >\n        {isLoadingRestaurants ? (\n          <BounceLoader\n            css={bouncerLoader}\n            size={16}\n            color={'#fff'}\n            loading={isLoadingRestaurants}\n          />\n        ) : (\n          <RiSearchLine color='#fff' size='1.2rem' />\n        )}\n      </button>\n    </form>\n  );\n};\nexport default SearchBar;\n","import React from 'react';\n\nconst CategoriesView: React.SFC = () => {\n  return (\n    <div className='flex flex-col md:flex-row md:items-start h-screen justify-center items-center'>\n      <section className='meal-image flex items-end w-full m-4 rounded-lg border border-gray-300 overflow-hidden cursor-pointer'>\n        <div className='flex flex-col items-center bg-white w-full h-32 text-center md:h-20 p-4'>\n          <h4 className='font-medium text-xl'>Go out for a meal</h4>\n          <p className='text-lg'>View the city's favorite dining venues</p>\n        </div>\n      </section>\n\n      <section className='categories-image flex items-end w-full m-4 rounded-lg border border-gray-300 overflow-hidden cursor-pointer'>\n        <div className='flex flex-col items-center bg-white w-full h-32 text-center md:text-left md:h-20 p-4'>\n          <h4 className='font-medium text-xl'>Nightlife &amp; Clubs</h4>\n          <p className='text-lg'>Explore the city's top nightlife outlets</p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default CategoriesView;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport SearchBar from '../../components/SearchBar/';\nimport CategoriesView from './CategoriesView';\n// import CollectionsView from './CollectionsView';\nimport { State } from '../../redux/type';\nimport '../../Home.css';\n\nconst Home: React.FC = () => {\n  const selected = useSelector(\n    (state: State) => state.homeReducer.selectedCity\n  );\n  const cities = useSelector(\n    (state: State) => state.homeReducer.citiesState.cities\n  );\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleUISelectedCityChange = (): string => {\n    const updatedSelected = cities.find((city) => city.name === selected?.name);\n    return updatedSelected?.name ? updatedSelected.name : cities[0].name;\n  };\n\n  return (\n    <div>\n      <div className='header-image flex flex-col justify-center items-center h-screen-90'>\n        <em className='zomato-title'>zomato</em>\n        <h2 className='header-two font-sans font-medium text-center text-4xl text-white my-2'>\n          Discover the best food &amp; drinks in{' '}\n          <span className='font-sans font-semibold text-4xl text-white'>\n            {handleUISelectedCityChange()}\n          </span>\n        </h2>\n        <SearchBar />\n      </div>\n\n      <div className='flex flex-col mx-20 content-between'>\n        <CategoriesView />\n        {/* <CollectionsView /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { BsStarFill } from 'react-icons/bs';\n\ninterface RestaurantDetailsProps {\n    details: any;\n}\n\nconst RestaurantDetails: React.FC<RestaurantDetailsProps> = ({ details }) => {\n    const renderHalfStarRating = () => {\n        let starsRating = details.user_rating.aggregate_rating;\n        if (starsRating % 1 !== 0) {\n            return (\n                <BsStarFill\n                    className='star-fill p-1 mr-2 rounded-sm'\n                    size='20'\n                    color='#fff'\n                />\n            );\n        }\n    };\n\n    const renderFullStarRating = () => {\n        const starsRating = Math.floor(details.user_rating.aggregate_rating);\n        return (\n            <div className='flex justify-evenly'>\n                {Array(starsRating).fill(\n                    <BsStarFill\n                        className='bg-black p-1 mr-2 rounded-sm'\n                        size='20'\n                        color='#fff'\n                    />\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <div className='flex justify-between h-screen-50 my-4'>\n            <div className='flex items-start flex-col'>\n                <h1 className='text-3xl cursor-pointer leading-tight'>\n                    {details.name}\n                </h1>\n                <p className='font-hairline text-gray-700 cursor-pointer'>\n                    {details.cuisines}\n                </p>\n                <p className='hover:text-gray-700 font-hairline text-gray-500 cursor-pointer'>\n                    {details.location.locality}\n                </p>\n                <p className='text-sm flex font-hairline text-gray-600'>\n                    {details.timings}\n                </p>\n            </div>\n            <div className='flex items-center flex-col'>\n                <div className='flex items-center'>\n                    {renderFullStarRating()}\n                    {renderHalfStarRating()}\n                    <p className='text-lg text-gray-900 ml-1'>\n                        {details.user_rating.aggregate_rating}\n                    </p>\n                </div>\n                <p className='text-gray-700 border-b border-dashed border-gray-500 cursor-pointer'>\n                    {details.all_reviews_count} Reviews\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default RestaurantDetails;\n","export default __webpack_public_path__ + \"static/media/cuisine-1.66b72550.jpg\";","export default __webpack_public_path__ + \"static/media/cuisine-2.514d39f7.jpg\";","export default __webpack_public_path__ + \"static/media/cuisine-3.b6184a23.jpg\";","export default __webpack_public_path__ + \"static/media/cuisine-4.e5496784.jpg\";","export default __webpack_public_path__ + \"static/media/cuisine-5.ed92b16b.jpg\";","import React from 'react';\nimport { MdAddAPhoto } from 'react-icons/md';\nimport '../../Restaurant.css';\nimport image1 from '../../assets/cuisine-1.jpg';\nimport image2 from '../../assets/cuisine-2.jpg';\nimport image3 from '../../assets/cuisine-3.jpg';\nimport image4 from '../../assets/cuisine-4.jpg';\nimport image5 from '../../assets/cuisine-5.jpg';\n\nconst ImageGrid: React.SFC = () => {\n  const getRandomCuisineImage = () => {\n    const rand = Math.floor(Math.random() * (5 - 1)) + 1;\n    switch (rand) {\n      case 2:\n        return image2;\n      case 3:\n        return image3;\n      case 4:\n        return image4;\n      case 5:\n        return image5;\n      default:\n        return image1;\n    }\n  };\n\n  return (\n    <div className='grid-layout h-screen-60 gap-2'>\n      <img\n        className='hover:scale-x-50 col-span-12 row-span-2 md:col-span-8 md:row-span-6 h-full w-full cursor-pointer'\n        src={getRandomCuisineImage()}\n        alt='cuisine'\n      />\n      <img\n        className='hover:scale-125 col-span-6 row-span-2 md:col-span-2 md:row-span-3 h-full w-full cursor-pointer'\n        src={getRandomCuisineImage()}\n        alt='cuisine'\n      />\n      <div className='view-gallery flex justify-center items-center col-span-6 row-span-2 md:col-span-2 md:row-span-3 h-full w-full text-white font-hairline cursor-pointer'>\n        View Gallery\n      </div>\n      <img\n        className='col-span-6 row-span-2 md:col-start-9 md:col-span-2 md:row-span-3 h-full w-full cursor-pointer'\n        src={getRandomCuisineImage()}\n        alt='cuisine'\n      />{' '}\n      <div className='add-photo flex flex-col justify-center items-center col-span-6 row-span-2 md:col-start-11 md:col-span-2 md:row-span-3 h-full w-full text-white font-hairline cursor-pointer'>\n        <MdAddAPhoto\n          size='40'\n          color='#fff'\n          className='bg-gray-900 opacity-50 rounded-full p-2'\n        />\n        Add Photos\n      </div>\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\n\nimport SearchBar from '../../components/SearchBar/';\nimport RestaurantDetails from './RestaurantDetails';\nimport RestaurantImageGrid from './RestaurantImageGrid';\nimport { State } from '../../redux/type';\nimport '../../Restaurant.css';\nimport { fetchRestaurantAsyncThunk } from '../../redux/restaurantSlice';\n\nconst Restaurant = () => {\n  const selected = useSelector(\n    (state: State) => state.restaurantReducer.selectedRestaurant\n  );\n  const params: any = useParams();\n  const dispatch = useDispatch();\n\n  const searchBarQuery = () => {\n    let rest = params.restaurant;\n    rest = rest.split('-');\n    const resId = rest.slice(rest.length - 1);\n    rest.splice(rest.length - 1);\n    rest = rest.join(' ');\n\n    dispatch(fetchRestaurantAsyncThunk({ q: rest, res_id: resId[0] }));\n  };\n\n  useEffect(() => {\n    if (!selected) {\n      searchBarQuery();\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <div className='flex flex-col'>\n      <div className='flex flex-col md:flex-row justify-evenly items-center border-b pb-1 mx-2'>\n        <div className='flex items-center md:hidden'>\n          <h2 className='hover:text-gray-800 font-hairline text-gray-600 mr-8 cursor-pointer'>\n            Login\n          </h2>\n          <Link to='/'>\n            <em className='zomato-header cursor-pointer'>zomato</em>\n          </Link>\n          <h2 className='hover:text-gray-800 text-base font-hairline text-gray-600 ml-8 cursor-pointer'>\n            Signup\n          </h2>\n        </div>\n        <Link to='/'>\n          <em className='hidden md:block zomato-header cursor-pointer'>\n            zomato\n          </em>\n        </Link>\n\n        <SearchBar />\n        <div className='hidden md:flex justify-evenly md:justify-start lg:justify-start'>\n          <h2 className='md:block lg:block hover:text-gray-800 text-base font-hairline text-gray-600 mr-8 cursor-pointer'>\n            Login\n          </h2>\n          <h2 className='md:block hover:text-gray-800 text-base font-hairline text-gray-600 mr-2 cursor-pointer'>\n            Signup\n          </h2>\n        </div>\n      </div>\n\n      {selected ? (\n        <div className='flex flex-col md:mx-24 mx-2 my-3'>\n          <div className='hidden md:flex mb-2'>\n            <span className='hover:text-red-600 text-xs text-gray-600 mr-1 md:mr-2 cursor-pointer'>\n              Home\n            </span>\n            <span className='text-xs text-gray-600 mr-1 md:mr-2'>&#47;</span>\n            <span className='hover:text-red-600 text-xs text-gray-600 mr-1 md:mr-2 cursor-pointer'>\n              United States\n            </span>\n            <span className='text-xs text-gray-600 mr-1 md:mr-2'>&#47;</span>\n            <span className='hover:text-red-600 text-xs text-gray-600 mr-1 md:mr-2 cursor-pointer'>\n              {selected.name}\n            </span>\n          </div>\n          <RestaurantImageGrid />\n          <RestaurantDetails details={selected} />\n        </div>\n      ) : (\n        <div className='min-h-screen min-w-screen'>Loading</div>\n      )}\n    </div>\n  );\n};\n\nexport default Restaurant;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './views/HomeView';\nimport Restaurant from './views/RestaurantView';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path='/:city/:restaurant' exact component={Restaurant} />\n        <Route path='/' component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { homeReducer } from './homeSlice';\nimport { restaurantReducer } from './restaurantSlice';\n\nexport default configureStore({\n    reducer: {\n        homeReducer,\n        restaurantReducer,\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}